plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.0'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'com.avast.gradle.docker-compose' version '0.7.1'
}

group = 'com.crypto'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.opencsv:opencsv:5.6'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.1.0'
    implementation 'org.mapstruct:mapstruct:1.5.2.Final'
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.6'
    implementation 'org.postgresql:postgresql:42.6.0'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'com.github.ben-manes.caffeine:caffeine:3.1.6'
    implementation 'org.liquibase:liquibase-core:4.22.0'


    compileOnly 'org.projectlombok:lombok:1.18.28'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    annotationProcessor 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

compileJava {
    options.compilerArgs += [
            '-Amapstruct.defaultComponentModel=spring',
            '-Amapstruct.defaultInjectionStrategy=constructor'
    ]
}

dockerCompose {
    useComposeFiles = ['docker-compose.yml']
}

tasks.named('test') {
    useJUnitPlatform()
}
